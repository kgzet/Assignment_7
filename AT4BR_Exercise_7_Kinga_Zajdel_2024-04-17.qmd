---
title: "AT4BR_Exercise_7_Kinga_Zajdel_2024-04-17"
author: "Kinga Zajdel"
format: html:
      embed-resources: true
      theme: hpstr
      toc: true
      toc-color: violet
      toc-location: left
      toc-depth: 6
      toc-expand: 6
      code-tools:
        source: true
        toggle: true
      code-fold: false
      code-summary: "Show the code"
      code-overflow: wrap
      page-layout: full
---

## mending the figure

#### about the data
There is no need to include how many cars were used in the times of the advertisement. Since we are not talking about number of cars being used that time but **percentage of cars bought through previous ten years and still working**, the exact numbers play no role here. Also, the percentage is rounded because in my source there were no precise numbers.

#### additional information - curiosity
On the page: <https://www.statista.com/statistics/1246890/vehicles-use-united-states-historical/> I have found information that in 80's in the US there were around 120.000-140.000 vehicles registered. For the purposes of the task, I assume that there were equal numbers of Chevy, Ford, Toyota, and Nissan/Datsun. 

```{r}
# installing the packages

# use ggplot2
# library(ggplot2)

# color-blind friendly palette - if the bars should be in different colours
# install.packages("viridis")
# library(viridis)

```
```{r}

# setting percentage of still working cars according to the ad
percent_Chevy <- 98.3
percent_Ford <- 97.5
percent_Toyota <- 96.5
percent_Nissan_Datsun <- 95.3

# numbers for the data frame
cars_dataset <- c(
  percent_Chevy,
  percent_Ford,
  percent_Toyota,
  percent_Nissan_Datsun)

# names for the data frame
cars_names <- c("Chevy", "Ford", "Toyota", "Nissan_Datsun")

# preparing the dataset for the plot
cars_ad_data<- data.frame(cars_names, cars_dataset) 
cars_ad_data 

```
How the plot originally looked like

```{r}
# data - here put the data frame
# aes x = here data for label x
# labs: title, x, y - labels of the plot
# geom_bar - function for barplots
# coord_cartesian(ylim = c(95, 100)) - allows to zoom the plot
# scale_x_discrete - puts the x axis according to data frame sequence

 ggplot(data = cars_ad_data, aes(x = cars_names))+
  labs(title="More than 98% of all Chevy trucks sold in the last
       10 years are still on the road.",
        x ="", y = "")+
  geom_bar(aes(y=cars_dataset),stat = "summary", fun = "mean", fill="dodgerblue1")+
  coord_cartesian(ylim = c(95, 100))+
  scale_x_discrete(limits = cars_names)
```

How the plot should look like - we can hardly see differences between the bars!

```{r}
 ggplot(data = cars_ad_data, aes(x = cars_names))+
  labs(title="More than 98% of all Chevy trucks sold in the last
       10 years are still on the road.",
        x ="", y = "")+
  geom_bar(aes(y=cars_dataset),stat = "summary", fun = "mean", fill="dodgerblue1")+
  scale_x_discrete(limits = cars_names)+
  geom_text(aes(y=cars_dataset, label=cars_dataset), 
    vjust=2.5, colour="white")

# scale_x_discrete(limits = cars_names) puts the x axis 
#  in the name-wise order

# geom_text - I have added percentage on the bars

# option with different colours of the columns
#  ggplot(data = cars_ad_data, aes(x = cars_names, fill=cars_names))+
#   labs(title="More than 98% of all Chevy trucks sold in the last
#        10 years are still on the road.",
#         x ="", y = "")+
#   geom_bar(aes(y=cars_dataset),stat = "summary", fun = "mean")+
#   scale_fill_viridis_d() + scale_x_discrete(limits = cars_names)

```

*No AI used.*
